{"version":3,"file":"static/js/Reviews.15cf3a4e.chunk.js","mappings":"8NAEaA,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAClC,OACE,+BACE,2BACE,qCAAaD,MACb,uBAAIC,U,UC2BZ,EA7BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,EAAKC,cACrD,CAACN,KAGF,+BAEI,wBACGF,EAAQS,OAAS,EAChBT,EAAQU,KAAI,SAAAC,GAAI,OACd,SAACf,EAAD,CAEEC,KAAMc,EAAKC,OACXd,KAAMa,EAAKE,SAFNF,EAAKG,QAMd,0E,iMCPNC,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAMGM,EAAY,mCAAG,sGACHJ,EAAgBK,IAAI,uBADjB,uBAClBf,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qDAQZgB,EAAc,mCAAG,WAAMC,GAAN,yFACLP,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CAAEI,MAAAA,KAFgB,uBACpBjB,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAUdiB,EAAgB,mCAAG,WAAMX,GAAN,yFACPG,EAAgBK,IAAhB,gBAA6BR,IADtB,uBACtBP,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAQhBmB,EAAa,mCAAG,WAAMZ,GAAN,yFACJG,EAAgBK,IAAhB,iBAA8BR,EAA9B,aADI,uBACnBP,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAQbF,EAAe,mCAAG,WAAMS,GAAN,yFACNG,EAAgBK,IAAhB,mBAChBR,EADgB,aADM,uBACrBP,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH","sources":["components/Reviews/ReviewsItem.jsx","components/Reviews/Reviews.jsx","servise/service.js"],"sourcesContent":["import { PropTypes } from 'prop-types';\n\nexport const ReviewsItem = ({ name, text }) => {\n  return (\n    <>\n      <li>\n        <h4>Author: {name}</h4>\n        <p>{text}</p>\n      </li>\n    </>\n  );\n};\n\nReviewsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsItem } from './ReviewsItem';\nimport { getRewiesMovies } from 'servise/service';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getRewiesMovies(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(item => (\n              <ReviewsItem\n                key={item.id}\n                name={item.author}\n                text={item.content}\n              ></ReviewsItem>\n            ))\n          ) : (\n            <h3>We don't have any review for this movie</h3>\n          )}\n        </ul>\n      }\n    </>\n  );\n};\n\nexport default Reviews;\n","// const API_KEY = '7a4cd4317772102a9b88ef6a54b71590';\n\n// export const fetchEvents = async page => {\n//   const response = await axios.get(\n//     `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n//   );\n//   return response.data._embedded.events;\n// };\n\n// ////////\n\n// export const eventsById = async id => {\n//   const responseById = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n//   return responseById.data;\n// };\nimport axios from 'axios';\n\nconst KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\n//https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n\nexport const getPoPMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data;\n};\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n//поиск кинофильма по ключевому слову на странице фильмов.\n\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n//запрос полной информации о фильме для страницы кинофильма.\n\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n//запрос информации о актёрском составе для страницы кинофильма.\n\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n//запрос обзоров для страницы кинофильма.\n\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["ReviewsItem","name","text","useState","reviews","setReviews","movieId","useParams","useEffect","getRewiesMovies","then","data","results","length","map","item","author","content","id","defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPoPMovies","get","getSerchMovies","query","getDetailsMovies","getCastMovies"],"sourceRoot":""}