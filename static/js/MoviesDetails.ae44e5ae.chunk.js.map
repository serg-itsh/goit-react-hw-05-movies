{"version":3,"file":"static/js/MoviesDetails.ae44e5ae.chunk.js","mappings":"mQAEaA,EAAaC,EAAAA,GAAAA,OAAH,8XAkBVC,EAAcD,EAAAA,GAAAA,IAAH,2FAMXE,EAAUF,EAAAA,GAAAA,IAAH,0CAIPG,EAAUH,EAAAA,GAAAA,GAAH,gJ,SCqDpB,EAlEqB,WAAO,IAAD,QACzB,GAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBP,GAASQ,MAAK,SAAAC,GAAI,OAAIV,EAAWU,QACjD,CAACT,KAGF,8BACGF,IACC,4BACE,SAACN,EAAD,CACEkB,KAAK,SACLC,QAAS,0BAAMP,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUU,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAFnD,sBAMA,UAAClB,EAAD,YACE,0BACE,gBACEmB,IAAG,yCAAoChB,EAAQiB,aAC/CC,IAAI,SACJC,MAAM,WAIV,UAACvB,EAAD,YACE,wBAAKI,EAAQoB,SACb,wCAAgBpB,EAAQqB,eACxB,sCACA,uBAAIrB,EAAQsB,YACZ,oCACA,uBAAItB,EAAQuB,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAMC,KAAK,eAGnD,UAAC7B,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM8B,GAAG,OAAOd,MAAO,CAAEC,KAAI,iBAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUU,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAxD,qBAIF,yBACE,SAAC,KAAD,CACEa,GAAG,UACHd,MAAO,CAAEC,KAAI,iBAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUU,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF1C,8BASN,SAAC,KAAD,W,iMCzDJc,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAMGM,EAAY,mCAAG,sGACHJ,EAAgBK,IAAI,uBADjB,uBAClBzB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qDAQZ0B,EAAc,mCAAG,WAAMC,GAAN,yFACLP,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CAAEI,MAAAA,KAFgB,uBACpB3B,EADoB,EACpBA,KADoB,kBAIrBA,EAAK4B,SAJgB,2CAAH,sDAUd9B,EAAgB,mCAAG,WAAM+B,GAAN,yFACPT,EAAgBK,IAAhB,gBAA6BI,IADtB,uBACtB7B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAQhB8B,EAAa,mCAAG,WAAMD,GAAN,yFACJT,EAAgBK,IAAhB,iBAA8BI,EAA9B,aADI,uBACnB7B,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAQb+B,EAAe,mCAAG,WAAMF,GAAN,yFACNT,EAAgBK,IAAhB,mBAChBI,EADgB,aADM,uBACrB7B,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","servise/service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonBack = styled.button`\n  border: none;\n\n  cursor: pointer;\n  padding: 8px 16px;\n  margin: 10px;\n  border-radius: 4px;\n  background-color: #d2dfff;\n  box-shadow: rgb(0 0 0 / 25%) 0px 4px 10px;\n  transition: cubic-bezier(0.4, 0, 1, 1) 250ms;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #3d75ff;\n    transition: cubic-bezier(0.4, 0, 1, 1) 250ms;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const AddInfo = styled.ul`\n  padding-bottom: 20px;\n  border-top: 1px solid #d8d8d8;\n  border-bottom: 1px solid #d8d8d8;\n  /* display: flex; */\n`;\n","import { getDetailsMovies } from '../../servise/service.js';\nimport { useState, useEffect } from 'react';\nimport {\n  Outlet,\n  useParams,\n  useLocation,\n  useNavigate,\n  Link,\n} from 'react-router-dom';\n\nimport {\n  InfoWrapper,\n  Wrapper,\n  ButtonBack,\n  AddInfo,\n} from './MovieDetails.styled.js';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const { movieId } = useParams();\n\n  //\n  const location = useLocation();\n  const navigate = useNavigate();\n  //\n\n  useEffect(() => {\n    getDetailsMovies(movieId).then(data => setDetails(data));\n  }, [movieId]);\n\n  return (\n    <>\n      {details && (\n        <div>\n          <ButtonBack\n            type=\"button\"\n            onClick={() => navigate(location?.state?.from ?? '/')}\n          >\n            Go back\n          </ButtonBack>\n          <Wrapper>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${details.poster_path}`}\n                alt=\"poster\"\n                width=\"250\"\n              />\n            </div>\n\n            <InfoWrapper>\n              <h2>{details.title}</h2>\n              <p>Popularity: {details.popularity}</p>\n              <h3>Overview</h3>\n              <p>{details.overview}</p>\n              <h3>Genres</h3>\n              <p>{details.genres.map(item => item.name).join(', ')}</p>\n            </InfoWrapper>\n          </Wrapper>\n          <AddInfo>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"reviews\"\n                  state={{ from: location?.state?.from ?? '/' }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </AddInfo>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","// const API_KEY = '7a4cd4317772102a9b88ef6a54b71590';\n\n// export const fetchEvents = async page => {\n//   const response = await axios.get(\n//     `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n//   );\n//   return response.data._embedded.events;\n// };\n\n// ////////\n\n// export const eventsById = async id => {\n//   const responseById = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n//   return responseById.data;\n// };\nimport axios from 'axios';\n\nconst KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\n//https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n\nexport const getPoPMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data;\n};\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n//поиск кинофильма по ключевому слову на странице фильмов.\n\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n//запрос полной информации о фильме для страницы кинофильма.\n\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n//запрос информации о актёрском составе для страницы кинофильма.\n\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n//запрос обзоров для страницы кинофильма.\n\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["ButtonBack","styled","InfoWrapper","Wrapper","AddInfo","useState","details","setDetails","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getDetailsMovies","then","data","type","onClick","state","from","src","poster_path","alt","width","title","popularity","overview","genres","map","item","name","join","to","defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPoPMovies","get","getSerchMovies","query","results","id","getCastMovies","getRewiesMovies"],"sourceRoot":""}